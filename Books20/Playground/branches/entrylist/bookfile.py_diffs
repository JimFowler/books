diff --git a/Books20/Tools/python/aabooks/ajbbook/bookfile.py b/Books20/Tools/python/aabooks/ajbbook/bookfile.py
index dbf8157..9625f08 100644
--- a/Books20/Tools/python/aabooks/ajbbook/bookfile.py
+++ b/Books20/Tools/python/aabooks/ajbbook/bookfile.py
@@ -62,8 +62,9 @@ class BookFile(entrylist.EntryList):
 
         short_title_list = ''
         for count, ent in enumerate(self):
-            short_title_list = short_title_list + str(count) + \
-                ' ' + ent.short_title()
+            if count > 0:
+                short_title_list = short_title_list + str(count) + \
+                                   ' ' + ent.short_title()
 
         return short_title_list
 
@@ -115,8 +116,9 @@ class BookFile(entrylist.EntryList):
 
         file_fd.write(self.get_header())
         for count, ent in enumerate(self):
-            file_fd.write(str(count) + ' ' + ent.write_text_from_entry() \
-                          + newline)
+            if count > 0:
+                file_fd.write(str(count) + ' ' + ent.write_text_from_entry() \
+                              + newline)
 
         file_fd.close()
         self._dirty = False
@@ -196,7 +198,8 @@ class BookFile(entrylist.EntryList):
         ets = etree.SubElement(elbf, 'Entries')
         for count, entry in enumerate(self):
             # entry is of Class AJBentry
-            ets.append(entry.write_xml_from_entry())
+            if count > 0:
+                ets.append(entry.write_xml_from_entry())
 
         bstr = etree.tostring(elbf,
                               xml_declaration=True,
@@ -242,7 +245,7 @@ if __name__ == "__main__":
 
             self.assertEqual(self.bookfile.read_file("testfile.xml"), 400)
             shorttitle = self.bookfile.make_short_title_list()
-            self.assertEqual(len(shorttitle), 19740)
+            self.assertEqual(len(shorttitle), 20142)
 
         def test_d_read_file_text(self):
             '''Test the BookFile.read_file_text() method.'''
