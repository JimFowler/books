#! /usr/bin/env python3
# -*- mode: Python;-*-
#
# Begin copyright
#
#  /home/jrf/Documents/books/Books20/Tools/python/ajbbooks
#
#   Part of the Books20 Project
#
#   Copyright 2014 James R. Fowler
#
#   All rights reserved. No part of this publication may be
#   reproduced, stored in a retrival system, or transmitted
#   in any form or by any means, electronic, mechanical,
#   photocopying, recording, or otherwise, without prior written
#   permission of the author.
#
#
# End copyright
#
"""AJB/AAA dialog to review and edit books entries
"""

import sys
import os
import argparse
from PyQt5 import QtGui, QtWidgets

import aabooks.ajbbook.ajbwindow as mw
import aabooks.ajbbook.ajb_rc

__version__ = '2.0'

#
# Parse the command line arguments
#
def getargs():
    """Parse the command line arguments."""
    parser = argparse.ArgumentParser(description='Create or edit an ajb??_books.xml file')

    parser.add_argument('-V', '--version',
                        help='provide version info,',
                        action='store_true')

    parser.add_argument('-i', '--input', type=str,
                        action='append',
                        help='read the file INPUT for entries')

    parser.add_argument('-s', '--symbols', type=str,
                        help='use alternate symbol table,')

    parser.add_argument('-v', '--volume', type=str,
                        help='default volume number,')

    parser.add_argument('-c', '--config', type=str,
                        help='alternate configuration file name.',
                        default='./ajbbooks.conf')
    #parser.add_argument( 'filename', type=str,
    #                     help='the name of the file to process.',
    #                     action='append')

    args = parser.parse_args()

    return args


#
# The main body
#

def main():
    """Set up the windows and start the event loop for ajbbooks."""
    args = getargs()

    app = QtWidgets.QApplication(sys.argv)
    app.setApplicationName('AJB Book Entry')
    app.setWindowIcon(QtGui.QIcon(':/icon_ajb.svg'))

    form = mw.BookEntry()
    app.focusChanged.connect(form.set_focus_changed)

    if args.version:
        form.help_about()
        sys.exit(app.exec_())

    if args.volume is not None:
        form.set_default_volume_number(args.volume)
        form.new_entry()

    if args.symbols is not None:
        form.set_symbol_table_name(args.symbols)

    if args.input is not None:
        fname = args.input[0]
        if os.path.isfile(fname):
            form.open_file(fname)
        else:
            form.open_new_file()
            form.bookfile.set_filename(fname)
            form.set_window_title(form.bookfile.get_basename())


    form.show()
    sys.exit(app.exec_())


if __name__ == '__main__':

    main()
