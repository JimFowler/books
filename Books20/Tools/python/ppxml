#!/usr/bin/env python3
# -*- mode: Python;-*-
# -*- coding: UTF-8 -*-
#
# Begin copyright
#
#  /home/jrf/Documents/books/Books20/Tools/python/ppxml
#  
#   Part of the Books20 Project
#
#   Copyright 2018 James R. Fowler
#
#   All rights reserved. No part of this publication may be
#   reproduced, stored in a retrival system, or transmitted
#   in any form or by any means, electronic, mechanical,
#   photocopying, recording, or otherwise, without prior written
#   permission of the author.
#
#
# End copyright
#
'''Pretty print an XML file to stdout'''

import sys
import os
import traceback
import argparse
from lxml import etree

def getargs():

    parser = argparse.ArgumentParser(description='Pretty print an XML file')

    parser.add_argument( '-v', '--version',
                         help='provide version info',
                         action='version',
                         version='%(prog) s v1.0 dtd 26 July 2015')

    parser.add_argument( 'filename', help='file name to pretty print')

    args = parser.parse_args()

    return args, parser

# Read command line
args, parser = getargs()

fname = args.filename

# check if we can read the file
if not os.path.isfile(fname):
    print('ppxml error: %s does not exist' % (fname) )
    sys.exit(-2)
elif not os.access(fname, os.R_OK):
    print('ppxml error: %s not readable' % (fname))
    sys.exit(-1)

# ok, pretty print the file to stdout
tree = etree.parse(args.filename)
print(etree.tostring(tree, pretty_print=True,
                     method='xml', encoding='unicode'))

