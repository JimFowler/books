<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- mode: nXML -*- -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- Used only for testing. This can be a root element for files
with multiple examples of BookFile elements -->
<xs:element name="testing"></xs:element>

<!--
A BookFile is a document consisting of a descriptive Header about the
file (which may be an empty string) and a set of Entries (which may
also be an empty set).  The Entries element consists of multiple Entry
elements.  Entry elements, in turn, describe books found in annual
volumes of the Astronomischer Jahresbericht
-->
<xs:element name="BookFile">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="Header" type="xs:string"/>
      <xs:element name="Entries">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Entry" type="entry" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:complexType name="entry">
  <xs:all>
    <!-- An Entry must have at least a Title and an Index to be valid -->
    <xs:element name="Index" type="index"/>
    <xs:element name="Title" type="xs:string"/>

    <xs:element name="subTitle" type="xs:string" minOccurs="0"/>

    <xs:element name="Authors" minOccurs="0">
      <xs:complexType>
        <xs:sequence>
	  <xs:element name="Author" type="G2" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="Editors" minOccurs="0">
      <xs:complexType>
        <xs:sequence>
	  <xs:element name="Editor" type="G2" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="Publishers" type='publishers' minOccurs="0"/>
    <xs:element name="Year"       type="xs:string"  minOccurs="0"/>
    <xs:element name="Edition"    type="xs:string"  minOccurs="0"/>
    <xs:element name="Pagination" type="xs:string"  minOccurs="0"/>
    <xs:element name="Prices"     type="prices"     minOccurs="0"/>

    <xs:element name="Reviews" minOccurs="0">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="Review" type="xs:string" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="TranslatedFrom" type="xs:string" minOccurs="0"/>
    <xs:element name="Language" type="xs:string" minOccurs="0"/>

    <xs:element name="Translators" minOccurs="0">
      <xs:complexType>
	<xs:sequence>
	  <xs:element name="Translator" type="G2" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="Compilers" minOccurs="0">
      <xs:complexType>
        <xs:sequence>
	  <xs:element name="Compiler" type="G2" maxOccurs="unbounded"/>
        </xs:sequence> 
      </xs:complexType>
    </xs:element>

    <xs:element name="Contributors" minOccurs="0">
      <xs:complexType>
        <xs:sequence>
	  <xs:element name="Contributor" type="G2" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="ReprintOf" minOccurs="0">
      <xs:complexType>
	<xs:choice>
	  <xs:element name="Index" type="index"/>
	  <xs:element name="Year"  type="xs:string"/>
	</xs:choice>
      </xs:complexType>
    </xs:element>

    <xs:element name="ReferenceOf" minOccurs="0">
      <xs:complexType>
	<xs:sequence>
	  <xs:element name="Index" type="index"/>
	</xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="Comments" minOccurs="0">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="Comment" type="xs:string" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </xs:all>

</xs:complexType>

<xs:complexType name="index">
  <xs:all>
    <xs:element name="IndexName"        type="xs:string"/>
    <xs:element name="VolumeNumber"     type="xs:integer"/>
    <xs:element name="SectionNumber"    type="xs:integer"/>
    <xs:element name="SubSectionNumber" type="xs:integer"/>
    <xs:element name="EntryNumber"      type="xs:string"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="publishers">
  <xs:sequence>
    <xs:element name="Publisher" type="publisher" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<!-- Name should be of type CorporateBody. Someday... -->
<xs:complexType name="publisher">
  <xs:all>
    <xs:element name="Place" type="xs:string"/>
    <xs:element name="Name"  type="xs:string"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="prices">
  <xs:sequence>
    <xs:element name="Price" type="xs:string" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<!-- future price increases. A more complex version of price
but this requires some intellegent parsing. -->
<xs:complexType name="prices2">
  <xs:sequence>
    <xs:element name="Price" maxOccurs="unbounded">
      <xs:complexType>
	<xs:all>
	  <xs:element name="Currency" type="xs:string"/>
	  <xs:element name="Amount"   type="xs:string"/>
	</xs:all>
      </xs:complexType>
    </xs:element>
  </xs:sequence>
</xs:complexType>


<xs:complexType name="pagination">
  <xs:all>
    <xs:element name="Introductory" type="xs:string"  minOccurs="0"/>
    <xs:element name="Main"         type="xs:integer" minOccurs="0"/>
    <xs:element name="Appendices"   type="xs:integer" minOccurs="0"/>
    <xs:element name="Tables"       type="xs:integer" minOccurs="0"/>
    <xs:element name="Figures"      type="xs:string"  minOccurs="0"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="G2">
  <!-- A Group 2 element. Group 2 elements may be a person
  or a corporate body.  The personInfo is based on the
  data structure in the python package nameparser. -->
  <xs:sequence>
    <xs:choice>
      <xs:element name="Person" type="personInfo"/>
      <xs:element name="CorporateBody" type="xs:string"/>
    </xs:choice> 
    <xs:element name="Order" type="xs:integer" minOccurs="0"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="personInfo">
  <xs:all>
    <xs:element name="Prefix"   type="xs:string" minOccurs="0"/>
    <xs:element name="First"    type="xs:string" minOccurs="0"/>
    <xs:element name="Middle"   type="xs:string" minOccurs="0"/>
    <xs:element name="Last"     type="xs:string" minOccurs="0"/>
    <xs:element name="Suffix"   type="xs:string" minOccurs="0"/>
    <xs:element name="NickName" type="xs:string" minOccurs="0"/>
  </xs:all>
</xs:complexType>

</xs:schema>

<!--
  Remaining Problems

How do we handle multiple volumes in one entry?
If multiple entries, how do we link the two (or more) entries?

Pagination definition conflicts with some multi-volume entries!
Make Pagination just an xs:string and parse later?


Possible redefinition of Review
  (how to parse the string??)

<xs:element name="Review" type="review"/>

<xs:complexType name="review"/>
  <xs:sequence>
    <xs:element name="Journal"  type="xs:string"/>
    <xs:element name="volRef"   type="xs:string"/>
    <xs:element name="Reviewer" type="personInfo" minOccurs="0"/>
  </xs:sequence>
</xs:complexType>


-->
